/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.intelaf.UI;

import com.mycompany.intelaf.Backend.ConnectionMysql;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author jara
 */
public class JFCatalogue extends javax.swing.JFrame {
    Connection cn = ConnectionMysql.conector();
    PreparedStatement ps;
    Statement st;
    ResultSet rs;
    DefaultTableModel model = new DefaultTableModel();
    TableRowSorter trs;
    /**
     * Creates new form JFCatalogo
     */
    public JFCatalogue() {
        super("Catalogo de Productos");
        this.setIconImage(new ImageIcon(getClass().getResource("/Images/logointelaf.png")).getImage());   
        initComponents();
        setSize(1000, 550);
        listarProductos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCatalogo = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtFiltro = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 81, 0));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Noto Sans", 1, 24)); // NOI18N
        jLabel1.setText("Listado de los Productos");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(360, 10, 410, 40);

        tablaCatalogo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaCatalogo);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 70, 940, 390);

        jLabel2.setText("Filtrar los productos: ");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(260, 480, 130, 19);

        txtFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFiltroActionPerformed(evt);
            }
        });
        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroKeyTyped(evt);
            }
        });
        jPanel1.add(txtFiltro);
        txtFiltro.setBounds(390, 480, 430, 31);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFiltroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFiltroActionPerformed

    private void txtFiltroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyTyped
       txtFiltro.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent ky) {
                trs.setRowFilter(RowFilter.regexFilter("(?i)" + txtFiltro.getText(), 0, 1,2));
            }
        });
        trs = new TableRowSorter(model);
        tablaCatalogo.setRowSorter(trs);
    }//GEN-LAST:event_txtFiltroKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaCatalogo;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables
private void listarProductos() {
        String sql = "SELECT p.codigo_producto, p.nombre, p.fabricante, p.precio , r.tienda ,r.cantidad_tienda FROM producto p JOIN suministra r ON p.codigo_producto = r.producto ORDER BY p.codigo_producto ASC;";
        rs = getTable(sql);
        model.setColumnIdentifiers(new Object[]{"Codigo", "Nombre","Fabricante","Precio","Tienda","Cantidad"});
        try {
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("p.codigo_producto"), rs.getString("p.nombre"),rs.getString("p.fabricante"),rs.getDouble("p.precio"),rs.getString("r.tienda"),rs.getInt("r.cantidad_tienda")});
            }
            tablaCatalogo.setModel(model);
        } catch (SQLException e) {
            System.out.println("Error al obtener datos para la tabla: " + e);
        }

    }

    public ResultSet getTable(String consulta) {
        try {
            st = cn.createStatement();
            rs = st.executeQuery(consulta);
        } catch (SQLException e) {
            System.out.println("Error al obtener datos para la tabla: " + e);
        }
        return rs;
    }

    public void limpiarLista() {
        model = (DefaultTableModel) tablaCatalogo.getModel();
        int a = tablaCatalogo.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            model.removeRow(model.getRowCount() - 1);
        }
    }
}
